





<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">

    <!--
        This template applies an ProjectPartView to an instance
        of the ProjectPartViewModel class shown in the main window.
    -->



    <ControlTemplate x:Key="CloseBtnTemplate" TargetType="Button">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CloseBtnFocusStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="00:00:00.3000000" />
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Duration="00:00:00.0010000"
                                                           Storyboard.TargetName="close"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.8" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Duration="00:00:00.0010000"
                                                           Storyboard.TargetName="close"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.2" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Button x:Name="close"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    AllowDrop="False"
                    Background="Transparent"
                    BorderThickness="0"
                    Cursor="Hand"
                    Padding="0"
                    Tag="{TemplateBinding Tag}"
                    UseLayoutRounding="True">
                <Button.Content>
                    <Image Width="14"
                           Height="14"
                           Source="/Images/CloseButton.png" />
                </Button.Content>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding CloseCommand}" CommandParameter="{Binding Tag, ElementName=close, Mode=OneWay}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
        </Grid>
    </ControlTemplate>


    <LinearGradientBrush x:Key="yellowBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#7FFFB400" />
            <GradientStop Offset="1" Color="#00FFCC00" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <ControlTemplate xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:s="clr-namespace:System;assembly=mscorlib"
                     x:Key="CustomTabItemTemplate"
                     TargetType="TabItem">
        <Grid Name="Root"
              Margin="0,0,0,0"
              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
            <Border Name="Border"
                    Background="{TemplateBinding Border.BorderBrush}"
                    CornerRadius="5,5,0,0">
                <Grid>
                    <Border Name="DefaultState"
                            Background="#FFF4F5F7"
                            CornerRadius="4,4,0,0"
                            Padding="1,1,1,1" />
                    <Border Name="HoverState"
                            Background="{StaticResource yellowBrush}"
                            CornerRadius="4,4,0,0"
                            Opacity="0"
                            Padding="1,1,1,1" />
                    <Border Name="SelectedState"
                            Background="{StaticResource yellowBrush}"
                            CornerRadius="4,4,0,0"
                            Opacity="0"
                            Padding="1,1,1,1" />
                    <Border Name="FocusedState"
                            Background="Transparent"
                            CornerRadius="4,4,0,0"
                            Opacity="0" />
                    <Grid Margin="0,2,0,2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="18" />

                        </Grid.ColumnDefinitions>
                        <ContentPresenter Name="Content"
                                          Grid.Column="0"
                                          Margin="{TemplateBinding Control.Padding}"
                                          Content="{TemplateBinding HeaderedContentControl.Header}"
                                          ContentSource="Header"
                                          ContentStringFormat="{TemplateBinding HeaderedContentControl.HeaderStringFormat}"
                                          ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                          RecognizesAccessKey="True" />

                        <Button x:Name="closeTabButton"
                                Grid.Column="1"
                                Tag="{TemplateBinding Name}"
                                Template="{StaticResource CloseBtnTemplate}" />

                    </Grid>

                </Grid>
            </Border>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver">
                <Setter TargetName="HoverState" Property="UIElement.Opacity">
                    <Setter.Value>
                        <s:Double>1</s:Double>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <Trigger Property="Selector.IsSelected">
                <Setter TargetName="SelectedState" Property="UIElement.Opacity">
                    <Setter.Value>
                        <s:Double>1</s:Double>
                    </Setter.Value>
                </Setter>
                <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                        <SolidColorBrush>#FF3C3C3C</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement">
                <Setter TargetName="Root" Property="FrameworkElement.Margin">
                    <Setter.Value>
                        <Thickness>0,0,0,0</Thickness>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Border" Property="Border.Padding">
                    <Setter.Value>
                        <Thickness>1,1,1,0</Thickness>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Content" Property="FrameworkElement.Margin">
                    <Setter.Value>
                        <Thickness>11,3,11,2</Thickness>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Content" Property="FrameworkElement.VerticalAlignment">
                    <Setter.Value>
                        <x:Static Member="VerticalAlignment.Top" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <x:Static Member="Dock.Top" />
                </Trigger.Value>
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement">
                <Setter TargetName="Root" Property="FrameworkElement.Margin">
                    <Setter.Value>
                        <Thickness>0,0,0,0</Thickness>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Border" Property="Border.Padding">
                    <Setter.Value>
                        <Thickness>1,0,1,1</Thickness>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="FocusedState" Property="Panel.Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStop Offset="0" Color="#00FFCC00" />
                                <GradientStop Offset="1" Color="#7FFFB400" />
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Content" Property="FrameworkElement.Margin">
                    <Setter.Value>
                        <Thickness>11,2,11,3</Thickness>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Content" Property="FrameworkElement.VerticalAlignment">
                    <Setter.Value>
                        <x:Static Member="VerticalAlignment.Bottom" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <x:Static Member="Dock.Bottom" />
                </Trigger.Value>
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement">
                <Setter TargetName="Root" Property="FrameworkElement.Margin">
                    <Setter.Value>
                        <Thickness>0,0,0,0</Thickness>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Border" Property="Border.Padding">
                    <Setter.Value>
                        <Thickness>1,1,0,1</Thickness>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="FocusedState" Property="Panel.Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                            <LinearGradientBrush.GradientStops>
                                <GradientStop Offset="0" Color="#7FFFB400" />
                                <GradientStop Offset="1" Color="#00FFCC00" />
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Content" Property="FrameworkElement.HorizontalAlignment">
                    <Setter.Value>
                        <x:Static Member="HorizontalAlignment.Left" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <x:Static Member="Dock.Left" />
                </Trigger.Value>
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement">
                <Setter TargetName="Root" Property="FrameworkElement.Margin">
                    <Setter.Value>
                        <Thickness>0,0,0,0</Thickness>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Border" Property="Border.Padding">
                    <Setter.Value>
                        <Thickness>0,1,1,1</Thickness>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="FocusedState" Property="Panel.Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                            <LinearGradientBrush.GradientStops>
                                <GradientStop Offset="0" Color="#00FFCC00" />
                                <GradientStop Offset="1" Color="#7FFFB400" />
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Content" Property="FrameworkElement.HorizontalAlignment">
                    <Setter.Value>
                        <x:Static Member="HorizontalAlignment.Right" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <x:Static Member="Dock.Right" />
                </Trigger.Value>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelected">
                        <Condition.Value>
                            <s:Boolean>True</s:Boolean>
                        </Condition.Value>
                    </Condition>
                    <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Top}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Root" Property="FrameworkElement.Margin">
                    <Setter.Value>
                        <Thickness>0,0,0,0</Thickness>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Border" Property="FrameworkElement.Margin">
                    <Setter.Value>
                        <Thickness>0,0,0,0</Thickness>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelected">
                        <Condition.Value>
                            <s:Boolean>True</s:Boolean>
                        </Condition.Value>
                    </Condition>
                    <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Bottom}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Root" Property="FrameworkElement.Margin">
                    <Setter.Value>
                        <Thickness>0,0,0,0</Thickness>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Border" Property="FrameworkElement.Margin">
                    <Setter.Value>
                        <Thickness>0,0,0,0</Thickness>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelected">
                        <Condition.Value>
                            <s:Boolean>True</s:Boolean>
                        </Condition.Value>
                    </Condition>
                    <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Left}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Root" Property="FrameworkElement.Margin">
                    <Setter.Value>
                        <Thickness>0,0,0,0</Thickness>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Border" Property="FrameworkElement.Margin">
                    <Setter.Value>
                        <Thickness>0,0,0,0</Thickness>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelected">
                        <Condition.Value>
                            <s:Boolean>True</s:Boolean>
                        </Condition.Value>
                    </Condition>
                    <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Right}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Root" Property="FrameworkElement.Margin">
                    <Setter.Value>
                        <Thickness>0,0,0,0</Thickness>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Border" Property="FrameworkElement.Margin">
                    <Setter.Value>
                        <Thickness>0,0,0,0</Thickness>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <Trigger Property="UIElement.IsFocused">
                <Setter TargetName="FocusedState" Property="UIElement.Opacity">
                    <Setter.Value>
                        <s:Double>1</s:Double>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled">
                <Setter TargetName="Root" Property="UIElement.Opacity">
                    <Setter.Value>
                        <s:Double>0.35</s:Double>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                </Trigger.Value>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="tabItemStyle" TargetType="TabItem">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="MinWidth" Value="10" />
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />

        <Setter Property="Template" Value="{StaticResource CustomTabItemTemplate}" />

        <Setter Property="FontSize" Value="13" />
    </Style>
</ResourceDictionary>
